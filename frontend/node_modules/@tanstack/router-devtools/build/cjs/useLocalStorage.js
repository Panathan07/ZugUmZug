/**
 * @tanstack/router-devtools/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

const getItem = key => {
  try {
    const itemValue = localStorage.getItem(key);
    if (typeof itemValue === 'string') {
      return JSON.parse(itemValue);
    }
    return undefined;
  } catch {
    return undefined;
  }
};
function useLocalStorage(key, defaultValue) {
  const [value, setValue] = React.useState();
  React.useEffect(() => {
    const initialValue = getItem(key);
    if (typeof initialValue === 'undefined' || initialValue === null) {
      setValue(typeof defaultValue === 'function' ? defaultValue() : defaultValue);
    } else {
      setValue(initialValue);
    }
  }, [defaultValue, key]);
  const setter = React.useCallback(updater => {
    setValue(old => {
      let newVal = updater;
      if (typeof updater == 'function') {
        newVal = updater(old);
      }
      try {
        localStorage.setItem(key, JSON.stringify(newVal));
      } catch {}
      return newVal;
    });
  }, [key]);
  return [value, setter];
}

exports.default = useLocalStorage;
//# sourceMappingURL=useLocalStorage.js.map
