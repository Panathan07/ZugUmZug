/**
 * @tanstack/router-devtools/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

var _rollupPluginBabelHelpers = require('./_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var reactRouter = require('@tanstack/react-router');
var useLocalStorage = require('./useLocalStorage.js');
var utils = require('./utils.js');
var styledComponents = require('./styledComponents.js');
var theme = require('./theme.js');
var Explorer = require('./Explorer.js');

const isServer = typeof window === 'undefined';
function Logo(props) {
  return /*#__PURE__*/React.createElement("div", _rollupPluginBabelHelpers.extends({}, props, {
    style: {
      ...(props.style ?? {}),
      display: 'flex',
      alignItems: 'center',
      flexDirection: 'column',
      fontSize: '0.8rem',
      fontWeight: 'bolder',
      lineHeight: '1'
    }
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      letterSpacing: '-0.05rem'
    }
  }, "TANSTACK"), /*#__PURE__*/React.createElement("div", {
    style: {
      backgroundImage: 'linear-gradient(to right, var(--tw-gradient-stops))',
      // @ts-ignore
      '--tw-gradient-from': '#84cc16',
      '--tw-gradient-stops': 'var(--tw-gradient-from), var(--tw-gradient-to)',
      '--tw-gradient-to': '#10b981',
      WebkitBackgroundClip: 'text',
      color: 'transparent',
      letterSpacing: '0.1rem',
      marginRight: '-0.2rem'
    }
  }, "ROUTER"));
}
function TanStackRouterDevtools({
  initialIsOpen,
  panelProps = {},
  closeButtonProps = {},
  toggleButtonProps = {},
  position = 'bottom-left',
  containerElement: Container = 'footer',
  router
}) {
  const rootRef = React.useRef(null);
  const panelRef = React.useRef(null);
  const [isOpen, setIsOpen] = useLocalStorage.default('tanstackRouterDevtoolsOpen', initialIsOpen);
  const [devtoolsHeight, setDevtoolsHeight] = useLocalStorage.default('tanstackRouterDevtoolsHeight', null);
  const [isResolvedOpen, setIsResolvedOpen] = utils.useSafeState(false);
  const [isResizing, setIsResizing] = utils.useSafeState(false);
  const isMounted = utils.useIsMounted();
  const handleDragStart = (panelElement, startEvent) => {
    if (startEvent.button !== 0) return; // Only allow left click for drag

    setIsResizing(true);
    const dragInfo = {
      originalHeight: panelElement?.getBoundingClientRect().height ?? 0,
      pageY: startEvent.pageY
    };
    const run = moveEvent => {
      const delta = dragInfo.pageY - moveEvent.pageY;
      const newHeight = dragInfo?.originalHeight + delta;
      setDevtoolsHeight(newHeight);
      if (newHeight < 70) {
        setIsOpen(false);
      } else {
        setIsOpen(true);
      }
    };
    const unsub = () => {
      setIsResizing(false);
      document.removeEventListener('mousemove', run);
      document.removeEventListener('mouseUp', unsub);
    };
    document.addEventListener('mousemove', run);
    document.addEventListener('mouseup', unsub);
  };
  React.useEffect(() => {
    setIsResolvedOpen(isOpen ?? false);
  }, [isOpen, isResolvedOpen, setIsResolvedOpen]);

  // Toggle panel visibility before/after transition (depending on direction).
  // Prevents focusing in a closed panel.
  React.useEffect(() => {
    const ref = panelRef.current;
    if (ref) {
      const handlePanelTransitionStart = () => {
        if (ref && isResolvedOpen) {
          ref.style.visibility = 'visible';
        }
      };
      const handlePanelTransitionEnd = () => {
        if (ref && !isResolvedOpen) {
          ref.style.visibility = 'hidden';
        }
      };
      ref.addEventListener('transitionstart', handlePanelTransitionStart);
      ref.addEventListener('transitionend', handlePanelTransitionEnd);
      return () => {
        ref.removeEventListener('transitionstart', handlePanelTransitionStart);
        ref.removeEventListener('transitionend', handlePanelTransitionEnd);
      };
    }
    return;
  }, [isResolvedOpen]);
  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {
    if (isResolvedOpen) {
      const previousValue = rootRef.current?.parentElement?.style.paddingBottom;
      const run = () => {
        const containerHeight = panelRef.current?.getBoundingClientRect().height;
        if (rootRef.current?.parentElement) {
          rootRef.current.parentElement.style.paddingBottom = `${containerHeight}px`;
        }
      };
      run();
      if (typeof window !== 'undefined') {
        window.addEventListener('resize', run);
        return () => {
          window.removeEventListener('resize', run);
          if (rootRef.current?.parentElement && typeof previousValue === 'string') {
            rootRef.current.parentElement.style.paddingBottom = previousValue;
          }
        };
      }
    }
    return;
  }, [isResolvedOpen]);
  const {
    style: panelStyle = {},
    ...otherPanelProps
  } = panelProps;
  const {
    style: closeButtonStyle = {},
    onClick: onCloseClick,
    ...otherCloseButtonProps
  } = closeButtonProps;
  const {
    style: toggleButtonStyle = {},
    onClick: onToggleClick,
    ...otherToggleButtonProps
  } = toggleButtonProps;

  // Do not render on the server
  if (!isMounted()) return null;
  return /*#__PURE__*/React.createElement(Container, {
    ref: rootRef,
    className: "TanStackRouterDevtools"
  }, /*#__PURE__*/React.createElement(theme.ThemeProvider, {
    theme: theme.defaultTheme
  }, /*#__PURE__*/React.createElement(TanStackRouterDevtoolsPanel, _rollupPluginBabelHelpers.extends({
    ref: panelRef
  }, otherPanelProps, {
    router: router,
    style: {
      position: 'fixed',
      bottom: '0',
      right: '0',
      zIndex: 99999,
      width: '100%',
      height: devtoolsHeight ?? 500,
      maxHeight: '90%',
      boxShadow: '0 0 20px rgba(0,0,0,.3)',
      borderTop: `1px solid ${theme.defaultTheme.gray}`,
      transformOrigin: 'top',
      // visibility will be toggled after transitions, but set initial state here
      visibility: isOpen ? 'visible' : 'hidden',
      ...panelStyle,
      ...(isResizing ? {
        transition: `none`
      } : {
        transition: `all .2s ease`
      }),
      ...(isResolvedOpen ? {
        opacity: 1,
        pointerEvents: 'all',
        transform: `translateY(0) scale(1)`
      } : {
        opacity: 0,
        pointerEvents: 'none',
        transform: `translateY(15px) scale(1.02)`
      })
    },
    isOpen: isResolvedOpen,
    setIsOpen: setIsOpen,
    handleDragStart: e => handleDragStart(panelRef.current, e)
  })), isResolvedOpen ? /*#__PURE__*/React.createElement(styledComponents.Button, _rollupPluginBabelHelpers.extends({
    type: "button",
    "aria-label": "Close TanStack Router Devtools"
  }, otherCloseButtonProps, {
    onClick: e => {
      setIsOpen(false);
      onCloseClick && onCloseClick(e);
    },
    style: {
      position: 'fixed',
      zIndex: 99999,
      margin: '.5em',
      bottom: 0,
      ...(position === 'top-right' ? {
        right: '0'
      } : position === 'top-left' ? {
        left: '0'
      } : position === 'bottom-right' ? {
        right: '0'
      } : {
        left: '0'
      }),
      ...closeButtonStyle
    }
  }), "Close") : null), !isResolvedOpen ? /*#__PURE__*/React.createElement("button", _rollupPluginBabelHelpers.extends({
    type: "button"
  }, otherToggleButtonProps, {
    "aria-label": "Open TanStack Router Devtools",
    onClick: e => {
      setIsOpen(true);
      onToggleClick && onToggleClick(e);
    },
    style: {
      appearance: 'none',
      background: 'none',
      border: 0,
      padding: 0,
      position: 'fixed',
      zIndex: 99999,
      display: 'inline-flex',
      fontSize: '1.5em',
      margin: '.5em',
      cursor: 'pointer',
      width: 'fit-content',
      ...(position === 'top-right' ? {
        top: '0',
        right: '0'
      } : position === 'top-left' ? {
        top: '0',
        left: '0'
      } : position === 'bottom-right' ? {
        bottom: '0',
        right: '0'
      } : {
        bottom: '0',
        left: '0'
      }),
      ...toggleButtonStyle
    }
  }), /*#__PURE__*/React.createElement(Logo, {
    "aria-hidden": true
  })) : null);
}
function RouteComp({
  route,
  isRoot,
  activeId,
  setActiveId
}) {
  const routerState = reactRouter.useRouterState();
  const matches = routerState.status === 'pending' ? routerState.pendingMatches ?? [] : routerState.matches;
  const match = routerState.matches.find(d => d.routeId === route.id);
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    role: "button",
    "aria-label": `Open match details for ${route.id}`,
    onClick: () => {
      if (match) {
        setActiveId(activeId === route.id ? '' : route.id);
      }
    },
    style: {
      display: 'flex',
      borderBottom: `solid 1px ${theme.defaultTheme.grayAlt}`,
      cursor: match ? 'pointer' : 'default',
      alignItems: 'center',
      background: route.id === activeId ? 'rgba(255,255,255,.1)' : undefined,
      padding: '.25rem .5rem',
      gap: '.5rem'
    }
  }, isRoot ? null : /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '0 0 auto',
      width: '.7rem',
      height: '.7rem',
      alignItems: 'center',
      justifyContent: 'center',
      fontWeight: 'bold',
      borderRadius: '100%',
      transition: 'all .2s ease-out',
      background: utils.getRouteStatusColor(matches, route, theme.defaultTheme),
      opacity: match ? 1 : 0.3
    }
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '1 0 auto',
      display: 'flex',
      justifyContent: 'space-between',
      alignItems: 'center',
      padding: isRoot ? '0 .25rem' : 0,
      opacity: match ? 1 : 0.7,
      fontSize: '0.7rem'
    }
  }, /*#__PURE__*/React.createElement(styledComponents.Code, null, route.path || reactRouter.trimPath(route.id), " "), /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      alignItems: 'center',
      gap: '.5rem'
    }
  }, match ? /*#__PURE__*/React.createElement(styledComponents.Code, {
    style: {
      opacity: 0.3
    }
  }, match.id) : null, /*#__PURE__*/React.createElement(AgeTicker, {
    match: match
  })))), route.children?.length ? /*#__PURE__*/React.createElement("div", {
    style: {
      marginLeft: isRoot ? 0 : '1rem',
      borderLeft: isRoot ? '' : `solid 1px ${theme.defaultTheme.grayAlt}`
    }
  }, [...route.children].sort((a, b) => {
    return a.rank - b.rank;
  }).map(r => /*#__PURE__*/React.createElement(RouteComp, {
    key: r.id,
    route: r,
    activeId: activeId,
    setActiveId: setActiveId
  }))) : null);
}
const TanStackRouterDevtoolsPanel = /*#__PURE__*/React.forwardRef(function TanStackRouterDevtoolsPanel(props, ref) {
  const {
    isOpen = true,
    setIsOpen,
    handleDragStart,
    router: userRouter,
    ...panelProps
  } = props;
  const router = reactRouter.useRouter();
  const routerState = reactRouter.useRouterState();
  const matches = [...(routerState.pendingMatches ?? []), ...routerState.matches, ...routerState.cachedMatches];
  reactRouter.invariant(router, 'No router was found for the TanStack Router Devtools. Please place the devtools in the <RouterProvider> component tree or pass the router instance to the devtools manually.');

  // useStore(router.__store)

  const [showMatches, setShowMatches] = useLocalStorage.default('tanstackRouterDevtoolsShowMatches', true);
  const [activeId, setActiveId] = useLocalStorage.default('tanstackRouterDevtoolsActiveRouteId', '');
  const activeMatch = React.useMemo(() => matches.find(d => d.routeId === activeId || d.id === activeId), [matches, activeId]);
  const hasSearch = Object.keys(routerState.location.search || {}).length;
  const explorerState = {
    ...router,
    state: router.state
  };
  return /*#__PURE__*/React.createElement(theme.ThemeProvider, {
    theme: theme.defaultTheme
  }, /*#__PURE__*/React.createElement(styledComponents.Panel, _rollupPluginBabelHelpers.extends({
    ref: ref,
    className: "TanStackRouterDevtoolsPanel"
  }, panelProps), /*#__PURE__*/React.createElement("style", {
    dangerouslySetInnerHTML: {
      __html: `

            .TanStackRouterDevtoolsPanel * {
              scrollbar-color: ${theme.defaultTheme.backgroundAlt} ${theme.defaultTheme.gray};
            }

            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar, .TanStackRouterDevtoolsPanel scrollbar {
              width: 1em;
              height: 1em;
            }

            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-track, .TanStackRouterDevtoolsPanel scrollbar-track {
              background: ${theme.defaultTheme.backgroundAlt};
            }

            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-thumb, .TanStackRouterDevtoolsPanel scrollbar-thumb {
              background: ${theme.defaultTheme.gray};
              border-radius: .5em;
              border: 3px solid ${theme.defaultTheme.backgroundAlt};
            }

            .TanStackRouterDevtoolsPanel table {
              width: 100%;
            }

            .TanStackRouterDevtoolsPanel table tr {
              border-bottom: 2px dotted rgba(255, 255, 255, .2);
            }

            .TanStackRouterDevtoolsPanel table tr:last-child {
              border-bottom: none
            }

            .TanStackRouterDevtoolsPanel table td {
              padding: .25rem .5rem;
              border-right: 2px dotted rgba(255, 255, 255, .05);
            }

            .TanStackRouterDevtoolsPanel table td:last-child {
              border-right: none
            }

          `
    }
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      position: 'absolute',
      left: 0,
      top: 0,
      width: '100%',
      height: '4px',
      marginBottom: '-4px',
      cursor: 'row-resize',
      zIndex: 100000
    },
    onMouseDown: handleDragStart
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '1 1 500px',
      minHeight: '40%',
      maxHeight: '100%',
      overflow: 'auto',
      borderRight: `1px solid ${theme.defaultTheme.grayAlt}`,
      display: 'flex',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      justifyContent: 'start',
      gap: '1rem',
      padding: '1rem',
      alignItems: 'center',
      background: theme.defaultTheme.backgroundAlt
    }
  }, /*#__PURE__*/React.createElement(Logo, {
    "aria-hidden": true
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      fontSize: 'clamp(.8rem, 2vw, 1.3rem)',
      fontWeight: 'bold'
    }
  }, /*#__PURE__*/React.createElement("span", {
    style: {
      fontWeight: 100
    }
  }, "Devtools"))), /*#__PURE__*/React.createElement("div", {
    style: {
      overflowY: 'auto',
      flex: '1'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em'
    }
  }, /*#__PURE__*/React.createElement(Explorer.default, {
    label: "Router",
    value: Object.fromEntries(utils.multiSortBy(Object.keys(explorerState), ['state', 'routesById', 'routesByPath', 'flatRoutes', 'options'].map(d => dd => dd !== d)).map(key => [key, explorerState[key]]).filter(d => typeof d[1] !== 'function' && !['__store', 'basepath', 'injectedHtml', 'subscribers', 'latestLoadPromise', 'navigateTimeout', 'resetNextScroll', 'tempLocationKey', 'latestLocation', 'routeTree', 'history'].includes(d[0]))),
    defaultExpanded: {
      state: {},
      context: {},
      options: {}
    },
    filterSubEntries: subEntries => {
      return subEntries.filter(d => typeof d.value !== 'function');
    }
  })))), /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '1 1 500px',
      minHeight: '40%',
      maxHeight: '100%',
      overflow: 'auto',
      borderRight: `1px solid ${theme.defaultTheme.grayAlt}`,
      display: 'flex',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '1 1 auto',
      overflowY: 'auto'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em',
      background: theme.defaultTheme.backgroundAlt,
      position: 'sticky',
      top: 0,
      zIndex: 1,
      display: 'flex',
      alignItems: 'center',
      gap: '.5rem',
      fontWeight: 'bold'
    }
  }, "Pathname", ' ', routerState.location.maskedLocation ? /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.1rem .5rem',
      background: theme.defaultTheme.warning,
      color: 'black',
      borderRadius: '.5rem'
    }
  }, "Masked") : null), /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5rem',
      display: 'flex',
      gap: '.5rem',
      alignItems: 'center'
    }
  }, /*#__PURE__*/React.createElement("code", {
    style: {
      opacity: 0.6
    }
  }, routerState.location.pathname), routerState.location.maskedLocation ? /*#__PURE__*/React.createElement("code", {
    style: {
      color: theme.defaultTheme.warning,
      fontWeight: 'bold'
    }
  }, routerState.location.maskedLocation.pathname) : null), /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em',
      background: theme.defaultTheme.backgroundAlt,
      position: 'sticky',
      top: 0,
      zIndex: 1,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      gap: '.5rem',
      fontWeight: 'bold'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      alignItems: 'center',
      gap: '.5rem'
    }
  }, /*#__PURE__*/React.createElement("button", {
    type: "button",
    onClick: () => {
      setShowMatches(false);
    },
    disabled: !showMatches,
    style: {
      appearance: 'none',
      opacity: showMatches ? 0.5 : 1,
      border: 0,
      background: 'transparent',
      color: 'inherit',
      cursor: 'pointer'
    }
  }, "Routes"), "/", /*#__PURE__*/React.createElement("button", {
    type: "button",
    onClick: () => {
      setShowMatches(true);
    },
    disabled: showMatches,
    style: {
      appearance: 'none',
      opacity: !showMatches ? 0.5 : 1,
      border: 0,
      background: 'transparent',
      color: 'inherit',
      cursor: 'pointer'
    }
  }, "Matches")), /*#__PURE__*/React.createElement("div", {
    style: {
      opacity: 0.3,
      fontSize: '0.7rem',
      fontWeight: 'normal'
    }
  }, "age / staleTime / gcTime")), !showMatches ? /*#__PURE__*/React.createElement(RouteComp, {
    route: router.routeTree,
    isRoot: true,
    activeId: activeId,
    setActiveId: setActiveId
  }) : /*#__PURE__*/React.createElement("div", null, (routerState.status === 'pending' ? routerState.pendingMatches ?? [] : routerState.matches).map((match, i) => {
    return /*#__PURE__*/React.createElement("div", {
      key: match.id || i,
      role: "button",
      "aria-label": `Open match details for ${match.id}`,
      onClick: () => setActiveId(activeId === match.id ? '' : match.id),
      style: {
        display: 'flex',
        borderBottom: `solid 1px ${theme.defaultTheme.grayAlt}`,
        cursor: 'pointer',
        alignItems: 'center',
        background: match === activeMatch ? 'rgba(255,255,255,.1)' : undefined
      }
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        flex: '0 0 auto',
        width: '1.3rem',
        height: '1.3rem',
        marginLeft: '.25rem',
        background: utils.getStatusColor(match, theme.defaultTheme),
        alignItems: 'center',
        justifyContent: 'center',
        fontWeight: 'bold',
        borderRadius: '.25rem',
        transition: 'all .2s ease-out'
      }
    }), /*#__PURE__*/React.createElement(styledComponents.Code, {
      style: {
        padding: '.5em',
        fontSize: '0.7rem'
      }
    }, `${match.id}`), /*#__PURE__*/React.createElement(AgeTicker, {
      match: match
    }));
  }))), routerState.cachedMatches?.length ? /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '1 1 auto',
      overflowY: 'auto',
      maxHeight: '50%'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em',
      background: theme.defaultTheme.backgroundAlt,
      position: 'sticky',
      top: 0,
      zIndex: 1,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      gap: '.5rem',
      fontWeight: 'bold'
    }
  }, /*#__PURE__*/React.createElement("div", null, "Cached Matches"), /*#__PURE__*/React.createElement("div", {
    style: {
      opacity: 0.3,
      fontSize: '0.7rem',
      fontWeight: 'normal'
    }
  }, "age / staleTime / gcTime")), /*#__PURE__*/React.createElement("div", null, routerState.cachedMatches.map(match => {
    return /*#__PURE__*/React.createElement("div", {
      key: match.id,
      role: "button",
      "aria-label": `Open match details for ${match.id}`,
      onClick: () => setActiveId(activeId === match.id ? '' : match.id),
      style: {
        display: 'flex',
        borderBottom: `solid 1px ${theme.defaultTheme.grayAlt}`,
        cursor: 'pointer',
        alignItems: 'center',
        background: match === activeMatch ? 'rgba(255,255,255,.1)' : undefined,
        fontSize: '0.7rem'
      }
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        flex: '0 0 auto',
        width: '.75rem',
        height: '.75rem',
        marginLeft: '.25rem',
        background: utils.getStatusColor(match, theme.defaultTheme),
        alignItems: 'center',
        justifyContent: 'center',
        fontWeight: 'bold',
        borderRadius: '100%',
        transition: 'all 1s ease-out'
      }
    }), /*#__PURE__*/React.createElement(styledComponents.Code, {
      style: {
        padding: '.5em'
      }
    }, `${match.id}`), /*#__PURE__*/React.createElement("div", {
      style: {
        marginLeft: 'auto'
      }
    }, /*#__PURE__*/React.createElement(AgeTicker, {
      match: match
    })));
  }))) : null), activeMatch ? /*#__PURE__*/React.createElement(styledComponents.ActivePanel, null, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em',
      background: theme.defaultTheme.backgroundAlt,
      position: 'sticky',
      top: 0,
      bottom: 0,
      zIndex: 1
    }
  }, "Match Details"), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("table", {
    style: {
      fontSize: '0.8rem'
    }
  }, /*#__PURE__*/React.createElement("tbody", null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
    style: {
      opacity: '.5'
    }
  }, "ID"), /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement(styledComponents.Code, {
    style: {
      lineHeight: '1.8em'
    }
  }, JSON.stringify(activeMatch.id, null, 2)))), /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
    style: {
      opacity: '.5'
    }
  }, "Status"), /*#__PURE__*/React.createElement("td", null, routerState.pendingMatches?.find(d => d.id === activeMatch.id) ? 'Pending' : routerState.matches?.find(d => d.id === activeMatch.id) ? 'Active' : 'Cached', ' ', "- ", activeMatch.status)), /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
    style: {
      opacity: '.5'
    }
  }, "Last Updated"), /*#__PURE__*/React.createElement("td", null, activeMatch.updatedAt ? new Date(activeMatch.updatedAt).toLocaleTimeString() : 'N/A'))))), activeMatch.loaderData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      background: theme.defaultTheme.backgroundAlt,
      padding: '.5em',
      position: 'sticky',
      top: 0,
      bottom: 0,
      zIndex: 1
    }
  }, "Loader Data"), /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em'
    }
  }, /*#__PURE__*/React.createElement(Explorer.default, {
    label: "loaderData",
    value: activeMatch.loaderData,
    defaultExpanded: {}
  }))) : null, /*#__PURE__*/React.createElement("div", {
    style: {
      background: theme.defaultTheme.backgroundAlt,
      padding: '.5em',
      position: 'sticky',
      top: 0,
      bottom: 0,
      zIndex: 1
    }
  }, "Explorer"), /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em'
    }
  }, /*#__PURE__*/React.createElement(Explorer.default, {
    label: "Match",
    value: activeMatch,
    defaultExpanded: {}
  }))) : null, hasSearch ? /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '1 1 500px',
      minHeight: '40%',
      maxHeight: '100%',
      overflow: 'auto',
      borderRight: `1px solid ${theme.defaultTheme.grayAlt}`,
      display: 'flex',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em',
      background: theme.defaultTheme.backgroundAlt,
      position: 'sticky',
      top: 0,
      bottom: 0,
      zIndex: 1,
      fontWeight: 'bold'
    }
  }, "Search Params"), /*#__PURE__*/React.createElement("div", {
    style: {
      padding: '.5em'
    }
  }, /*#__PURE__*/React.createElement(Explorer.default, {
    value: routerState.location.search || {},
    defaultExpanded: Object.keys(routerState.location.search || {}).reduce((obj, next) => {
      obj[next] = {};
      return obj;
    }, {})
  }))) : null));
});
function AgeTicker({
  match
}) {
  const router = reactRouter.useRouter();
  const rerender = React.useReducer(() => ({}), () => ({}))[1];
  React.useEffect(() => {
    const interval = setInterval(() => {
      rerender();
    }, 1000);
    return () => {
      clearInterval(interval);
    };
  }, []);
  if (!match) {
    return null;
  }
  const route = router.looseRoutesById[match?.routeId];
  if (!route.options.loader) {
    return null;
  }
  const age = Date.now() - match?.updatedAt;
  const staleTime = route.options.staleTime ?? router.options.defaultStaleTime ?? 0;
  const gcTime = route.options.gcTime ?? router.options.defaultGcTime ?? 30 * 60 * 1000;
  return /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'inline-flex',
      alignItems: 'center',
      gap: '.25rem',
      color: age > staleTime ? theme.defaultTheme.warning : undefined
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {}
  }, formatTime(age)), /*#__PURE__*/React.createElement("div", null, "/"), /*#__PURE__*/React.createElement("div", null, formatTime(staleTime)), /*#__PURE__*/React.createElement("div", null, "/"), /*#__PURE__*/React.createElement("div", null, formatTime(gcTime)));
}
function formatTime(ms) {
  const units = ['s', 'min', 'h', 'd'];
  const values = [ms / 1000, ms / 60000, ms / 3600000, ms / 86400000];
  let chosenUnitIndex = 0;
  for (let i = 1; i < values.length; i++) {
    if (values[i] < 1) break;
    chosenUnitIndex = i;
  }
  const formatter = new Intl.NumberFormat(navigator.language, {
    compactDisplay: 'short',
    notation: 'compact',
    maximumFractionDigits: 0
  });
  return formatter.format(values[chosenUnitIndex]) + units[chosenUnitIndex];
}

exports.TanStackRouterDevtools = TanStackRouterDevtools;
exports.TanStackRouterDevtoolsPanel = TanStackRouterDevtoolsPanel;
//# sourceMappingURL=devtools.js.map
