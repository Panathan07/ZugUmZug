/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

var React = require('react');
var routerCore = require('@tanstack/router-core');
var react = require('./react.js');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);

const useLayoutEffect = typeof window !== 'undefined' ? React__namespace.useLayoutEffect : React__namespace.useEffect;
function useScrollRestoration(options) {
  const router = react.useRouter();
  useLayoutEffect(() => {
    return routerCore.watchScrollPositions(router, options);
  }, []);
  useLayoutEffect(() => {
    routerCore.restoreScrollPositions(router, options);
  });
}
function ScrollRestoration(props) {
  useScrollRestoration(props);
  return null;
}

exports.ScrollRestoration = ScrollRestoration;
exports.useScrollRestoration = useScrollRestoration;
//# sourceMappingURL=scroll-restoration.js.map
