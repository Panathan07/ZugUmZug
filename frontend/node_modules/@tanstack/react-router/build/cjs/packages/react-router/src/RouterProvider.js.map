{"version":3,"file":"RouterProvider.js","sources":["../../../../../src/RouterProvider.tsx"],"sourcesContent":["import * as React from 'react'\nimport warning from 'tiny-warning'\nimport { useStore } from '@tanstack/react-store'\nimport { Matches } from './Matches'\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ResolveRelativePath,\n  ToOptions,\n} from './link'\nimport { ParsedLocation } from './location'\nimport { AnyRoute } from './route'\nimport { RouteById, RoutePaths } from './routeInfo'\nimport {\n  BuildNextOptions,\n  RegisteredRouter,\n  Router,\n  RouterOptions,\n  RouterState,\n} from './router'\nimport { NoInfer, PickAsRequired, useLayoutEffect } from './utils'\nimport { MatchRouteOptions } from './Matches'\nimport { RouteMatch } from './Matches'\n\nexport interface CommitLocationOptions {\n  replace?: boolean\n  resetScroll?: boolean\n  startTransition?: boolean\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n}\n\nexport type BuildLinkFn<TRouteTree extends AnyRoute> = <\n  TFrom extends RoutePaths<TRouteTree> = '/',\n  TTo extends string = '',\n>(\n  dest: LinkOptions<TRouteTree, TFrom, TTo>,\n) => LinkInfo\n\nexport type NavigateFn<TRouteTree extends AnyRoute> = <\n  TFrom extends RoutePaths<TRouteTree> = '/',\n  TTo extends string = '',\n  TMaskFrom extends RoutePaths<TRouteTree> = TFrom,\n  TMaskTo extends string = '',\n>(\n  opts: NavigateOptions<TRouteTree, TFrom, TTo, TMaskFrom, TMaskTo>,\n) => Promise<void>\n\nexport type MatchRouteFn<TRouteTree extends AnyRoute> = <\n  TFrom extends RoutePaths<TRouteTree> = '/',\n  TTo extends string = '',\n  TResolved = ResolveRelativePath<TFrom, NoInfer<TTo>>,\n>(\n  location: ToOptions<TRouteTree, TFrom, TTo>,\n  opts?: MatchRouteOptions,\n) => false | RouteById<TRouteTree, TResolved>['types']['allParams']\n\nexport type BuildLocationFn<TRouteTree extends AnyRoute> = (\n  opts: BuildNextOptions,\n) => ParsedLocation\n\nexport type InjectedHtmlEntry = string | (() => Promise<string> | string)\n\nexport const routerContext = React.createContext<Router<any>>(null!)\n\nif (typeof document !== 'undefined') {\n  window.__TSR_ROUTER_CONTEXT__ = routerContext as any\n}\n\nexport function RouterProvider<\n  TRouteTree extends AnyRoute = RegisteredRouter['routeTree'],\n  TDehydrated extends Record<string, any> = Record<string, any>,\n>({ router, ...rest }: RouterProps<TRouteTree, TDehydrated>) {\n  // Allow the router to update options on the router instance\n  router.update({\n    ...router.options,\n    ...rest,\n    context: {\n      ...router.options.context,\n      ...rest?.context,\n    },\n  } as any)\n\n  const inner = <RouterProviderInner<TRouteTree, TDehydrated> router={router} />\n\n  if (router.options.Wrap) {\n    return <router.options.Wrap>{inner}</router.options.Wrap>\n  }\n\n  return inner\n}\n\nfunction RouterProviderInner<\n  TRouteTree extends AnyRoute = RegisteredRouter['routeTree'],\n  TDehydrated extends Record<string, any> = Record<string, any>,\n>({ router }: RouterProps<TRouteTree, TDehydrated>) {\n  const [isTransitioning, startReactTransition] = React.useTransition()\n\n  router.startReactTransition = startReactTransition\n  router.isTransitioning = isTransitioning\n\n  const tryLoad = () => {\n    startReactTransition(() => {\n      try {\n        router.load()\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  useLayoutEffect(() => {\n    const unsub = router.history.subscribe(() => {\n      router.latestLocation = router.parseLocation(router.latestLocation)\n      if (router.state.location !== router.latestLocation) {\n        tryLoad()\n      }\n    })\n\n    const nextLocation = router.buildLocation({\n      search: true,\n      params: true,\n      hash: true,\n      state: true,\n    })\n\n    if (router.state.location.href !== nextLocation.href) {\n      router.commitLocation({ ...nextLocation, replace: true })\n    }\n\n    return () => {\n      unsub()\n    }\n  }, [router.history])\n\n  useLayoutEffect(() => {\n    if (\n      !isTransitioning &&\n      router.state.resolvedLocation !== router.state.location\n    ) {\n      router.emit({\n        type: 'onResolved',\n        fromLocation: router.state.resolvedLocation,\n        toLocation: router.state.location,\n        pathChanged:\n          router.state.location!.href !== router.state.resolvedLocation?.href,\n      })\n      router.pendingMatches = []\n\n      router.__store.setState((s) => ({\n        ...s,\n        resolvedLocation: s.location,\n      }))\n    }\n  })\n\n  useLayoutEffect(() => {\n    if (!window.__TSR_DEHYDRATED__) {\n      tryLoad()\n    }\n  }, [])\n\n  return (\n    <routerContext.Provider value={router}>\n      <Matches />\n    </routerContext.Provider>\n  )\n}\n\nexport function getRouteMatch<TRouteTree extends AnyRoute>(\n  state: RouterState<TRouteTree>,\n  id: string,\n): undefined | RouteMatch<TRouteTree> {\n  return [...state.pendingMatches, ...state.matches].find((d) => d.id === id)\n}\n\nexport function useRouterState<\n  TSelected = RouterState<RegisteredRouter['routeTree']>,\n>(opts?: {\n  select: (state: RouterState<RegisteredRouter['routeTree']>) => TSelected\n}): TSelected {\n  const router = useRouter()\n  return useStore(router.__store, opts?.select as any)\n}\n\nexport type RouterProps<\n  TRouteTree extends AnyRoute = RegisteredRouter['routeTree'],\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> = Omit<RouterOptions<TRouteTree, TDehydrated>, 'context'> & {\n  router: Router<TRouteTree>\n  context?: Partial<RouterOptions<TRouteTree, TDehydrated>['context']>\n}\n\nexport function useRouter<\n  TRouteTree extends AnyRoute = RegisteredRouter['routeTree'],\n>(): Router<TRouteTree> {\n  const resolvedContext =\n    typeof document !== 'undefined'\n      ? window.__TSR_ROUTER_CONTEXT__ || routerContext\n      : routerContext\n  const value = React.useContext(resolvedContext)\n  warning(value, 'useRouter must be used inside a <RouterProvider> component!')\n  return value as any\n}\n"],"names":["routerContext","React","createContext","document","window","__TSR_ROUTER_CONTEXT__","RouterProvider","router","rest","update","options","context","inner","createElement","RouterProviderInner","Wrap","isTransitioning","startReactTransition","useTransition","tryLoad","load","err","console","error","useLayoutEffect","unsub","history","subscribe","latestLocation","parseLocation","state","location","nextLocation","buildLocation","search","params","hash","href","commitLocation","replace","resolvedLocation","emit","type","fromLocation","toLocation","pathChanged","pendingMatches","__store","setState","s","__TSR_DEHYDRATED__","Provider","value","Matches","getRouteMatch","id","matches","find","d","useRouterState","opts","useRouter","useStore","select","resolvedContext","useContext","warning"],"mappings":"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"}