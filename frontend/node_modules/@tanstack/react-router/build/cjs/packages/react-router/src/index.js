/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

var index = require('../../../node_modules/.pnpm/@tanstack_react-store@0.2.1_react-dom@18.2.0_react@18.2.0/node_modules/@tanstack/react-store/build/modern/index.js');
var routerCore = require('@tanstack/router-core');
var react = require('./react.js');
var scrollRestoration = require('./scroll-restoration.js');
var awaited = require('./awaited.js');



exports.useStore = index.useStore;
exports.Block = react.Block;
exports.CatchBoundary = react.CatchBoundary;
exports.CatchBoundaryImpl = react.CatchBoundaryImpl;
exports.ErrorComponent = react.ErrorComponent;
exports.Link = react.Link;
exports.MatchRoute = react.MatchRoute;
exports.Navigate = react.Navigate;
exports.Outlet = react.Outlet;
exports.RouterProvider = react.RouterProvider;
exports.lazyRouteComponent = react.lazyRouteComponent;
exports.matchIdsContext = react.matchIdsContext;
exports.routerContext = react.routerContext;
exports.shallow = react.shallow;
exports.useBlocker = react.useBlocker;
exports.useDehydrate = react.useDehydrate;
exports.useHydrate = react.useHydrate;
exports.useInjectHtml = react.useInjectHtml;
exports.useLinkProps = react.useLinkProps;
exports.useLoader = react.useLoader;
exports.useMatch = react.useMatch;
exports.useMatchRoute = react.useMatchRoute;
exports.useMatches = react.useMatches;
exports.useNavigate = react.useNavigate;
exports.useParams = react.useParams;
exports.useRouteContext = react.useRouteContext;
exports.useRouter = react.useRouter;
exports.useRouterContext = react.useRouterContext;
exports.useRouterState = react.useRouterState;
exports.useSearch = react.useSearch;
exports.ScrollRestoration = scrollRestoration.ScrollRestoration;
exports.useScrollRestoration = scrollRestoration.useScrollRestoration;
exports.Await = awaited.Await;
exports.useAwaited = awaited.useAwaited;
Object.keys(routerCore).forEach(function (k) {
	if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return routerCore[k]; }
	});
});
//# sourceMappingURL=index.js.map
