/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var history = require('@tanstack/history');
var invariant = require('tiny-invariant');
var warning = require('tiny-warning');
var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var invariant__default = /*#__PURE__*/_interopDefaultLegacy(invariant);
var warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);
var React__namespace = /*#__PURE__*/_interopNamespace(React);

/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */

const routerContext = /*#__PURE__*/React__namespace.createContext(null);
if (typeof document !== 'undefined') {
  window.__TSR_ROUTER_CONTEXT__ = routerContext;
}
function isDehydratedDeferred(obj) {
  return typeof obj === 'object' && obj !== null && !(obj instanceof Promise) && !obj.then && '__deferredState' in obj;
}

Object.defineProperty(exports, 'invariant', {
  enumerable: true,
  get: function () { return invariant__default["default"]; }
});
Object.defineProperty(exports, 'warning', {
  enumerable: true,
  get: function () { return warning__default["default"]; }
});
exports.isDehydratedDeferred = isDehydratedDeferred;
exports.routerContext = routerContext;
Object.keys(history).forEach(function (k) {
  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () { return history[k]; }
  });
});
//# sourceMappingURL=index.js.map
