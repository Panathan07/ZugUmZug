/**
 * @tanstack/react-router/src/index.tsx
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

function defer(_promise) {
  const promise = _promise;
  if (!promise.__deferredState) {
    promise.__deferredState = {
      uid: Math.random().toString(36).slice(2),
      status: 'pending'
    };
    const state = promise.__deferredState;
    promise.then(data => {
      state.status = 'success';
      state.data = data;
    }).catch(error => {
      state.status = 'error';
      state.error = error;
    });
  }
  return promise;
}
function isDehydratedDeferred(obj) {
  return typeof obj === 'object' && obj !== null && !(obj instanceof Promise) && !obj.then && '__deferredState' in obj;
}

exports.defer = defer;
exports.isDehydratedDeferred = isDehydratedDeferred;
//# sourceMappingURL=defer.js.map
