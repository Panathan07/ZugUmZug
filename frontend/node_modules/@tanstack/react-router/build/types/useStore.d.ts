import { NonNullableUpdater } from './utils';
export type Store<T> = {
    getState: () => T;
    setState: (updater: NonNullableUpdater<T>, opts?: {
        notify?: boolean;
    }) => void;
    subscribe: (listener: (state: T) => void) => () => void;
};
export declare const createStore: <T>(createState: (setState: (nextState: T) => void, getState: () => T, api: Store<T>) => T, opts?: {
    onUpdate?: ((nextState: T, prevState: T) => T) | undefined;
} | undefined) => Store<T>;
export declare function useStore<State, Slice>(store: Store<State>, selector_?: (state: State) => Slice): Slice;
