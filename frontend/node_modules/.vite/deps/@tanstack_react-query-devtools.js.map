{
  "version": 3,
  "sources": ["../../@tanstack/react-query-devtools/src/devtools.tsx", "../../@tanstack/query-devtools/build/dev.js", "../../@tanstack/react-query-devtools/src/index.ts"],
  "sourcesContent": ["'use client'\nimport * as React from 'react'\nimport { onlineManager, useQueryClient } from '@tanstack/react-query'\nimport { TanstackQueryDevtools } from '@tanstack/query-devtools'\nimport type {\n  DevToolsErrorType,\n  DevtoolsButtonPosition,\n  DevtoolsPosition,\n} from '@tanstack/query-devtools'\nimport type { QueryClient } from '@tanstack/react-query'\n\nexport interface DevtoolsOptions {\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * The position of the React Query logo to open and close the devtools panel.\n   * 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n   * Defaults to 'bottom-left'.\n   */\n  buttonPosition?: DevtoolsButtonPosition\n  /**\n   * The position of the React Query devtools panel.\n   * 'top' | 'bottom' | 'left' | 'right'\n   * Defaults to 'bottom'.\n   */\n  position?: DevtoolsPosition\n  /**\n   * Custom instance of QueryClient\n   */\n  client?: QueryClient\n  /**\n   * Use this so you can define custom errors that can be shown in the devtools.\n   */\n  errorTypes?: Array<DevToolsErrorType>\n  /**\n   * Use this to pass a nonce to the style tag that is added to the document head. This is useful if you are using a Content Security Policy (CSP) nonce to allow inline styles.\n   */\n  styleNonce?: string\n}\n\nexport function ReactQueryDevtools(\n  props: DevtoolsOptions,\n): React.ReactElement | null {\n  const queryClient = useQueryClient()\n  const client = props.client || queryClient\n  const ref = React.useRef<HTMLDivElement>(null)\n  const { buttonPosition, position, initialIsOpen, errorTypes, styleNonce } =\n    props\n  const [devtools] = React.useState(\n    new TanstackQueryDevtools({\n      client: client,\n      queryFlavor: 'React Query',\n      version: '5',\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n    }),\n  )\n\n  React.useEffect(() => {\n    devtools.setClient(client)\n  }, [client, devtools])\n\n  React.useEffect(() => {\n    if (buttonPosition) {\n      devtools.setButtonPosition(buttonPosition)\n    }\n  }, [buttonPosition, devtools])\n\n  React.useEffect(() => {\n    if (position) {\n      devtools.setPosition(position)\n    }\n  }, [position, devtools])\n\n  React.useEffect(() => {\n    devtools.setInitialIsOpen(initialIsOpen || false)\n  }, [initialIsOpen, devtools])\n\n  React.useEffect(() => {\n    devtools.setErrorTypes(errorTypes || [])\n  }, [errorTypes, devtools])\n\n  React.useEffect(() => {\n    if (ref.current) {\n      devtools.mount(ref.current)\n    }\n\n    return () => {\n      devtools.unmount()\n    }\n  }, [devtools])\n\n  return <div className=\"tsqd-parent-container\" ref={ref}></div>\n}\n", "import { createSignal, render, lazy, setupStyleSheet, createComponent, mergeProps } from './chunk/UF7WX6DB.js';\r\n\r\n// src/index.tsx\r\nvar TanstackQueryDevtools = class {\r\n  #client;\r\n  #onlineManager;\r\n  #queryFlavor;\r\n  #version;\r\n  #isMounted = false;\r\n  #styleNonce;\r\n  #buttonPosition;\r\n  #position;\r\n  #initialIsOpen;\r\n  #errorTypes;\r\n  #Component;\r\n  #dispose;\r\n  constructor(config) {\r\n    const {\r\n      client,\r\n      queryFlavor,\r\n      version,\r\n      onlineManager,\r\n      buttonPosition,\r\n      position,\r\n      initialIsOpen,\r\n      errorTypes,\r\n      styleNonce\r\n    } = config;\r\n    this.#client = createSignal(client);\r\n    this.#queryFlavor = queryFlavor;\r\n    this.#version = version;\r\n    this.#onlineManager = onlineManager;\r\n    this.#styleNonce = styleNonce;\r\n    this.#buttonPosition = createSignal(buttonPosition);\r\n    this.#position = createSignal(position);\r\n    this.#initialIsOpen = createSignal(initialIsOpen);\r\n    this.#errorTypes = createSignal(errorTypes);\r\n  }\r\n  setButtonPosition(position) {\r\n    this.#buttonPosition[1](position);\r\n  }\r\n  setPosition(position) {\r\n    this.#position[1](position);\r\n  }\r\n  setInitialIsOpen(isOpen) {\r\n    this.#initialIsOpen[1](isOpen);\r\n  }\r\n  setErrorTypes(errorTypes) {\r\n    this.#errorTypes[1](errorTypes);\r\n  }\r\n  setClient(client) {\r\n    this.#client[1](client);\r\n  }\r\n  mount(el) {\r\n    if (this.#isMounted) {\r\n      throw new Error(\"Devtools is already mounted\");\r\n    }\r\n    const dispose = render(() => {\r\n      const [btnPosition] = this.#buttonPosition;\r\n      const [pos] = this.#position;\r\n      const [isOpen] = this.#initialIsOpen;\r\n      const [errors] = this.#errorTypes;\r\n      const [queryClient] = this.#client;\r\n      let Devtools;\r\n      if (this.#Component) {\r\n        Devtools = this.#Component;\r\n      } else {\r\n        Devtools = lazy(() => import('./Devtools/A6DP7BKI.js'));\r\n        this.#Component = Devtools;\r\n      }\r\n      setupStyleSheet(this.#styleNonce);\r\n      const _self$ = this;\r\n      return createComponent(Devtools, mergeProps({\r\n        get queryFlavor() {\r\n          return _self$.#queryFlavor;\r\n        },\r\n        get version() {\r\n          return _self$.#version;\r\n        },\r\n        get onlineManager() {\r\n          return _self$.#onlineManager;\r\n        }\r\n      }, {\r\n        get client() {\r\n          return queryClient();\r\n        },\r\n        get buttonPosition() {\r\n          return btnPosition();\r\n        },\r\n        get position() {\r\n          return pos();\r\n        },\r\n        get initialIsOpen() {\r\n          return isOpen();\r\n        },\r\n        get errorTypes() {\r\n          return errors();\r\n        }\r\n      }));\r\n    }, el);\r\n    this.#isMounted = true;\r\n    this.#dispose = dispose;\r\n  }\r\n  unmount() {\r\n    if (!this.#isMounted) {\r\n      throw new Error(\"Devtools is not mounted\");\r\n    }\r\n    this.#dispose?.();\r\n    this.#isMounted = false;\r\n  }\r\n};\r\n\r\nexport { TanstackQueryDevtools };\r\n", "'use client'\n\nimport * as devtools from './devtools'\n\nexport const ReactQueryDevtools: (typeof devtools)['ReactQueryDevtools'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : devtools.ReactQueryDevtools\n"],
  "mappings": "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",
  "names": ["onlineManager", "_a", "ReactQueryDevtools"]
}
